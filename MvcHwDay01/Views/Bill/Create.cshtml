@model MvcHwDay01.Models.BillingItemViewModel

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@

<div id="failure" class="alert alert-warning" role="alert" style="display:none">
</div>

@*@using (Html.BeginForm())*@
@using (Ajax.BeginForm("CreateWithAjax", new AjaxOptions
{
    HttpMethod = "Post",
    LoadingElementId = "load",
    UpdateTargetId = "billings",
    OnBegin = "ajax_begin",
    OnSuccess = "ajax_success",
    OnFailure = "ajax_failure",
    //Confirm = "Are you sure?",
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>BillingItemViewModel</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BillType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BillType, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.BillType,
                                    (SelectList)ViewBag.BillTypes,
                                    new { htmlAttributes = new { @class = "form-control" } }
                    )
                @Html.ValidationMessageFor(model => model.BillType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BillDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BillDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BillDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Memo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnGo" type="submit" value="送出" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="load" class="alert alert-warning" role="alert" style="display:none">
    @(DateTime.Now) 處理中, 請稍候 ...
</div>

<div id="success" class="alert alert-warning" role="alert" style="display:none">
    @(DateTime.Now) 處理成功 ...
</div>

<div id="billings">
    @Html.Action("ListCurrent")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")
    <script type="text/javascript" src="~/Scripts/site.js"></script>

    <script type="text/javascript">

        function ajax_begin() {
            $("#failure").hide();
            $("#failure").empty();
            return true;
        }

        function ajax_success(result) {
            $("#success").fadeIn(2000);
            $("#success").fadeOut(2000);
            enableButtons();
        }

        function ajax_failure(result) {
            //$("#failure").fadeIn(2000);
            //$("#failure").fadeOut(2000);

            //var obj = $.parseJSON(result.responseText);
            ////列舉每一個錯誤訊息
            //$.each(obj, function (i, item) {
            //    $("<ul></ul>").html("<li></li>").html(item).appendTo("#failure");
            //});
            //$("#failure").show();

            //參考 91 老師的實作方式, 以將錯誤訊息呈現在對應的欄位下方
            ajaxFailedFunc(result);
            enableButtons();
        }

        function enableButtons() {
            //[問題]: 為何用 this 去找, 會找不到?
            //var buttons = $(this).find('[type="submit"]');
            var buttons = $("form").find('[type="submit"]');
            buttons.each(function (btn) {
                $(buttons[btn]).prop('disabled', false);
            });
        }

        //http://www.hackered.co.uk/articles/asp-net-mvc-query-preventing-multiple-clicks-by-disabling-submit-buttons
        //以下這段程式, 不論 Html.BeginForm() 或 Ajax.BeginForm() 都會呼叫到
        $(document).on('submit', 'form', function () {
            var buttons = $(this).find('[type="submit"]');
            if ($(this).valid()) {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', true);
                });
            } else {
                buttons.each(function (btn) {
                    $(buttons[btn]).prop('disabled', false);
                });
            }
        });

    </script>

}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
